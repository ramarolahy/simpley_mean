{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-task/add-task.component.html","webpack:///./src/app/components/add-task/add-task.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/menu/menu.component.html","webpack:///./src/app/components/menu/menu.component.ts","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/components/task-list/task-list.component.html","webpack:///./src/app/components/task-list/task-list.component.ts","webpack:///./src/app/components/today/today.component.html","webpack:///./src/app/components/today/today.component.ts","webpack:///./src/app/services/api/api.service.ts","webpack:///./src/app/services/auth/authenticate.service.ts","webpack:///./src/app/services/auth/authentication.service.ts","webpack:///./src/app/services/today/today.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\nimport { AuthenticationService } from './services/auth/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(public auth: AuthenticationService) {}\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FormsModule} from \"@angular/forms\";\nimport {APP_BASE_HREF} from \"@angular/common\";\n// Components\nimport {AppComponent} from './app.component';\nimport {HomeComponent} from './components/home/home.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {SignupComponent} from './components/signup/signup.component';\nimport {TodayComponent} from './components/today/today.component';\nimport {MenuComponent} from './components/menu/menu.component';\nimport {TaskListComponent} from './components/task-list/task-list.component';\nimport {AddTaskComponent} from './components/add-task/add-task.component';\n// Services\nimport {ApiService} from \"./services/api/api.service\";\nimport {AuthenticationService} from \"./services/auth/authentication.service\";\nimport {AuthenticateService} from \"./services/auth/authenticate.service\";\nimport {TodayService} from \"./services/today/today.service\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'today', component: TodayComponent, canActivate: [AuthenticateService]}\n];\n\n@NgModule({\n  declarations: [\n    // Components\n    AppComponent,\n    SignupComponent,\n    LoginComponent,\n    MenuComponent,\n    HomeComponent,\n    TodayComponent,\n    TaskListComponent,\n    AddTaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    DragDropModule\n  ],\n  providers: [{provide: APP_BASE_HREF, useValue: '/'}, ApiService , AuthenticationService, AuthenticateService, TodayService],\n  // Which components gets booted first?\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<div class=\\\"empty_entry_item_wrap\\\">\\n    <form (ngSubmit)=\\\"onSubmit()\\\" name=\\\"newTodoForm\\\">\\n        <!--    <div class={\\\"empty_entry_label\\\"} ref={ el => this._emptyEntryLabel = el}>-->\\n        <!--      <i class={\\\"fas fa-plus addTodo_placeholder\\\"} ref={ el => this._iconAddTodoPlaceholder = el}/>-->\\n        <!--      <span class={\\\"addTodo_placeholder\\\"} ref={ el => this._spanAddTodoPlaceholder = el}>-->\\n        <!--                            What else do you need todo? ...-->\\n        <!--                        </span>-->\\n        <!--    </div>-->\\n        <input type=\\\"text\\\" class=\\\"new_entry_input\\\" [ngStyle]=\\\"{'display':'block'}\\\" [(ngModel)]=\\\"newTodo.desc\\\" name=\\\"desc\\\" autoComplete=\\\"off\\\"\\n               placeholder=\\\"Take over the world ...\\\" required/>\\n        <button type=\\\"submit\\\" class=\\\"all_btn new_entry_btn\\\" [ngStyle]=\\\"{'display':'block'}\\\" name=\\\"addTodo\\\">\\n            <i class=\\\"fas fa-plus addTodo\\\"></i>\\n        </button>\\n    </form>\\n</div>\\n\"","import {Component, OnInit, Output, EventEmitter} from '@angular/core';\nimport {TodayService} from \"../../services/today/today.service\";\nimport {Todo} from \"../../models/Todo\";\nimport {AuthenticationService} from \"../../services/auth/authentication.service\";\n\n@Component({\n    selector: 'app-add-task',\n    templateUrl: './add-task.component.html',\n    //styleUrls: ['../css/styles.css']\n})\nexport class AddTaskComponent implements OnInit {\n    // Variable newTodo of type Todo\n    private newTodo: Todo;\n    private owner = this.auth.getUserDetails()._id;\n    @Output() addTodo: EventEmitter<Todo> = new EventEmitter<Todo>();\n\n    constructor(private todayService: TodayService, private auth: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.newTodo = {\n            owner: this.owner ,\n            desc: '',\n            completed: false,\n        }\n    }\n\n    public onSubmit() {\n        this.todayService.addTodo(this.owner, this.newTodo).subscribe(\n            res => {\n                if (res) {\n                    this.addTodo.emit(res);\n                    this.newTodo.desc = '';\n                }\n            }\n        );\n    }\n\n}\n","module.exports = \"<div class=\\\"auth_wrap\\\">\\n<a routerLink=\\\"/\\\">\\n  <svg class=\\\"big-log\\\" viewBox=\\\"0 0 10 2\\\">\\n    <text class=\\\"svg_path\\\" x=\\\"5\\\" y=\\\"1\\\" alignment-baseline=\\\"middle\\\" text-anchor=\\\"middle\\\" font-size=\\\"1\\\" fill=\\\"none\\\"\\n          stroke-width=\\\".02\\\" stroke=\\\"#fff\\\" font-family=\\\"Pacifico, sans-serif\\\" letter-spacing=\\\"0.02px\\\">\\n      Simpley\\n    </text>\\n  </svg>\\n</a>\\n\\n<div class=\\\"wrap-home-links bg-transparent \\\">\\n  <div class=\\\"card wrap_home__icon\\\" routerLink=\\\"/login\\\">\\n    <h3 class=\\\"text-center mb-4 title_home__icon\\\">Plan today!</h3>\\n    <i class=\\\"fas fa-clipboard-list fa-9x text-center home__icon\\\"></i>\\n  </div>\\n</div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  //selector: 'app-home',\n  templateUrl: './home.component.html',\n  //styleUrls: ['./home.component.css']\n})\nexport class HomeComponent{\n}\n","module.exports = \"<div class=\\\"auth_wrap\\\">\\n  <a routerLink=\\\"/\\\">\\n    <svg class=\\\"big-log\\\" viewBox=\\\"0 0 10 2\\\">\\n      <text class=\\\"svg_path\\\" x=\\\"5\\\" y=\\\"1\\\" alignment-baseline=\\\"middle\\\" text-anchor=\\\"middle\\\" font-size=\\\"1\\\" fill=\\\"none\\\"\\n            stroke-width=\\\".02\\\" stroke=\\\"#fff\\\" font-family=\\\"Pacifico, sans-serif\\\" letter-spacing=\\\"0.02px\\\">\\n        Simpley\\n      </text>\\n    </svg>\\n  </a>\\n  <div class=\\\"card bg-transparent border-0 px-5 py-5\\\">\\n    <form id=\\\"signupForm\\\" class=\\\"mx-auto\\\" (submit)=\\\"login()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\" class=\\\"text-white\\\">Email</label>\\n        <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n               autoComplete=\\\"off\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"credentials.email\\\"\\n               required/>\\n        <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\"> We'll never share your email with anyone else</small>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\" class=\\\"text-white\\\">Password</label>\\n        <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n               autoComplete=\\\"off\\\" placeholder=\\\"Enter password\\\" [(ngModel)]=\\\"credentials.password\\\" required/>\\n      </div>\\n      <button type=\\\"submit\\\" id=\\\"signup\\\" class=\\\"btn btn-primary mt-4\\\">Live Simpley</button>\\n      <p class=\\\"login-invite text-center pt-3\\\">\\n        <span class=\\\"text-white\\\">Still need an account? <a routerLink=\\\"/signup\\\">Signup here.</a></span>\\n      </p>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n\"","import {Component} from '@angular/core';\nimport {AuthenticationService} from \"../../services/auth/authentication.service\";\nimport {TokenPayload} from \"../../services/api/api.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  //selector: 'app-login',\n  templateUrl: './login.component.html',\n  //styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  credentials: TokenPayload = {\n    email: '',\n    password: ''\n  };\n\n  constructor(private auth: AuthenticationService, private router: Router) {\n  }\n\n  // See http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html#instance-method-subscribe\n  // to read about subscribe() from RxJS\n  login() {\n    this.auth.login(this.credentials).subscribe(() => {\n      // TODO: Add alert/messaging system\n      this.router.navigateByUrl('/today');\n    }, (err) => {\n      // TODO: Add alert/messaging system\n      console.error(err);\n    });\n  }\n\n}\n","module.exports = \"<form id=\\\"avatarForm\\\" action=\\\"\\\" method=\\\"POST\\\">\\n  <div id=\\\"radial-container\\\">\\n    <div class=\\\"avatar\\\" [ngStyle]=\\\"{'background-image':'url(assets/images/avatar2.png)', 'background-size': '80%'}\\\" >\\n<!--    <input id=\\\"avatarInput\\\" type=\\\"file\\\" name=\\\"avatar\\\" [ngStyle]=\\\"{'display':'none'}\\\"/>-->\\n<!--      <label for=\\\"avatarInput\\\"><i class=\\\"fas fa-camera-retro\\\"></i></label>-->\\n    <div class=\\\"wrap navbar-nav\\\">\\n      <input id=\\\"checking\\\" type=\\\"checkbox\\\" [ngStyle]=\\\"{'display':'none'}\\\"/>\\n      <a class=\\\"blob nav-link\\\"><i class=\\\"fas nav-btn fa-cog\\\"></i></a>\\n      <a class=\\\"blob nav-link\\\"><i class=\\\"fas nav-btn fa-wallet\\\"></i></a>\\n      <a class=\\\"blob nav-link\\\" (click)=\\\"logout()\\\"><i class=\\\"fas nav-btn fa-door-open\\\"></i></a>\\n    </div>\\n  </div>\\n\\n  </div>\\n</form>\\n\"","import { Component } from '@angular/core';\nimport {AuthenticationService} from \"../../services/auth/authentication.service\";\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  //styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent {\n  // Use AuthenticationService to display user firstname and get logout method\n  constructor( public auth:AuthenticationService) { }\n\n  /**\n   * Attach logout method to menu link\n   */\n  logout(){\n    this.auth.logout()\n  }\n\n}\n","module.exports = \"<div class=\\\"auth_wrap\\\">\\n    <a routerLink=\\\"/\\\">\\n        <svg class=\\\"big-log\\\" viewBox=\\\"0 0 10 2\\\">\\n            <text class=\\\"svg_path\\\" x=\\\"5\\\" y=\\\"1\\\" alignment-baseline=\\\"middle\\\" text-anchor=\\\"middle\\\" font-size=\\\"1\\\"\\n                  fill=\\\"none\\\"\\n                  stroke-width=\\\".02\\\" stroke=\\\"#fff\\\" font-family=\\\"Pacifico, sans-serif\\\" letter-spacing=\\\"0.02px\\\">\\n                Simpley\\n            </text>\\n        </svg>\\n    </a>\\n    <div class=\\\"card bg-transparent border-0 px-5 py-5\\\">\\n        <form id=\\\"signupForm\\\" class=\\\"mx-auto\\\" (submit)=\\\"signup()\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"firstname\\\" class=\\\"text-white\\\">Firstname</label>\\n                <input type=\\\"text\\\" name=\\\"firstname\\\" class=\\\"form-control\\\" id=\\\"firstname\\\" autoComplete=\\\"off\\\"\\n                       placeholder=\\\"Enter firstname\\\" [(ngModel)]=\\\"credentials.firstname\\\" required/>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"lastname\\\" class=\\\"text-white\\\">Lastname</label>\\n                <input type=\\\"text\\\" name=\\\"lastname\\\" class=\\\"form-control\\\" id=\\\"lastname\\\" autoComplete=\\\"off\\\"\\n                       placeholder=\\\"Enter lastname\\\" [(ngModel)]=\\\"credentials.lastname\\\" required/>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\" class=\\\"text-white\\\">Email</label>\\n                <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n                       autoComplete=\\\"off\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"credentials.email\\\"\\n                       required/>\\n                <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\"> We'll never share your email with anyone else\\n                </small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\" class=\\\"text-white\\\">Password</label>\\n                <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n                       autoComplete=\\\"off\\\" placeholder=\\\"Enter password\\\" [(ngModel)]=\\\"credentials.password\\\" required/>\\n            </div>\\n            <button type=\\\"submit\\\" id=\\\"signup\\\" class=\\\"btn btn-primary mt-4\\\">Live Simpley</button>\\n            <p class=\\\"login-invite text-center pt-3\\\">\\n                <span class=\\\"text-white\\\">Already have an account? <a routerLink=\\\"/login\\\">Login here.</a></span>\\n            </p>\\n        </form>\\n    </div>\\n</div>\\n\"","import {Component} from '@angular/core';\nimport {AuthenticationService} from \"../../services/auth/authentication.service\";\nimport {TokenPayload} from \"../../services/api/api.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    //selector: 'app-signup',\n    templateUrl: './signup.component.html',\n    //styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n    credentials: TokenPayload = {\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: ''\n    };\n\n    constructor(private auth: AuthenticationService, private router: Router) {\n    }\n\n    // See http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html#instance-method-subscribe\n    // to read about subscribe() from RxJS\n    signup() {\n        this.auth.signup(this.credentials).subscribe(() => {\n            // Redirect to login page if signup successful\n            // TODO: Add alert/messaging system\n            this.router.navigateByUrl('/login');\n        }, (err) => {\n            // TODO: Add alert/messaging system\n            console.error(err);\n        });\n    }\n\n}\n","module.exports = \"<div cdkDropList (cdkDropListDropped)=\\\"drop($event)\\\">\\n    <div cdkDrag *ngFor=\\\"let todo of todos; index as i\\\" id=\\\" {{todo._id}} \\\" class=\\\"entry_item_wrap  {{todo.completed.toString()}} \\\">\\n        <i class=\\\"icon_info fas fa-check {{ todo.completed.toString() }}\\\" data-name=\\\"complete\\\"\\n           (click)=\\\"editTodo(todo._id, {owner: todo.owner, completed: !todo.completed, completedAt: !todo.completed ? setDate() : null} ); todo.completed = !todo.completed\\\"></i>\\n        <form>\\n            <input type=\\\"hidden\\\" name=\\\"todo_id\\\" value=\\\"activity.id\\\"/>\\n            <input type=\\\"text\\\" class=\\\"entry_label {{todo.completed.toString()}}\\\"\\n                   autoComplete='off' name='updatedActivity' value=\\\"{{ todo.desc }}\\\" required readOnly/>\\n            <!-- Add check if is completed-->\\n<!--            <span class=\\\"wrap__icon_info wrap__icon_info-edit\\\">-->\\n<!--                <i class=\\\"icon_info fas fa-pencil-alt\\\"></i>-->\\n<!--            </span>-->\\n        </form>\\n        <div>\\n            <input type=\\\"hidden\\\" name=\\\"activity_id\\\"/>\\n            <button type=\\\"button\\\" class=\\\"hidden delete__todo wrap__icon_info wrap__icon_info-delete\\\"\\n                    (click)=\\\"deleteTodo(todo._id); $event.stopPropagation()\\\">\\n      <span class=\\\"delete__todo wrap__icon_info wrap__icon_info-delete\\\">\\n        <i class=\\\"icon_info fas fa-trash-alt\\\"></i>\\n      </span>\\n            </button>\\n        </div>\\n    </div>\\n</div>\\n\\n<app-add-task (addTodo)=\\\"onAddTodo($event)\\\"></app-add-task>\"","import {Component, OnInit} from '@angular/core';\nimport {TodayService} from \"../../services/today/today.service\";\nimport {AuthenticationService} from \"../../services/auth/authentication.service\";\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {Todo} from \"../../models/Todo\";\nimport {forEach} from \"@angular/router/src/utils/collection\";\n\n@Component({\n    selector: 'app-task-list',\n    templateUrl: './task-list.component.html',\n    //styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n    private todos: Todo[] = [];\n    private updatedTodo: Todo;\n\n\n    constructor(private todayService: TodayService, private auth: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.getTodos();\n    }\n\n    /**\n     * Method to handle todo reordering with dragNdrop\n     * @param event\n     */\n    drop(event: CdkDragDrop<Todo[]>) {\n        // Reorder todo items in the array\n        moveItemInArray(this.todos, event.previousIndex, event.currentIndex);\n        let newIndex = 0;\n        // Update order field in the db for each todo with updated index.\n        this.todos.forEach(todo => {\n            this.todayService.editTodo(todo._id, {owner: todo.owner, order: newIndex}).subscribe(\n                res => res,\n            );\n            newIndex++;\n        });\n    }\n\n    /**\n     * Method to fetch all todos from db\n     */\n    public getTodos() {\n        const userid = this.auth.getUserDetails()._id;\n        this.todayService.getTodos(userid).subscribe(\n            res => this.todos = res,)\n    }\n\n    public onAddTodo(newTodo) {\n        this.todos = this.todos.concat(newTodo)\n    }\n\n    public setDate() {\n        const d = new Date();\n        return d.getUTCDate();\n    }\n\n    public editTodo(todoid, body) {\n        this.updatedTodo = body;\n        this.todayService.editTodo(todoid, this.updatedTodo).subscribe(\n            res => res,\n        )\n    }\n\n    public deleteTodo(todoid) {\n        this.todayService.deleteTodo(todoid).subscribe(\n            res => this.todos = this.todos.filter(todo => todo._id !== todoid),\n        )\n    }\n\n\n}\n","module.exports = \"<div class=\\\"main_container\\\">\\n  <h2 class=\\\"text-center title__today text-white mb-3\\\">Today</h2>\\n  <app-task-list></app-task-list>\\n</div>\\n<app-menu></app-menu>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  //selector: 'app-today',\n  templateUrl: './today.component.html',\n  //styleUrls: ['./today.component.css']\n})\nexport class TodayComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    // load all todos\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\ninterface TokenResponse {\n    token: string;\n}\n\nexport interface TokenPayload {\n    firstname?: string;\n    lastname?: string;\n    email?: string;\n    password?: string;\n}\n\n// See https://angular.io/api/core/Injectable for Injectable decorator\n@Injectable()\nexport class ApiService {\n    private token: string;\n\n    constructor(private http: HttpClient) {\n    }\n\n    /**\n     * Method to save token to localStorage\n     * @param token\n     * returns void\n     */\n    public saveToken(token: string): void {\n        localStorage.setItem('simpley-ng-token', token);\n        this.token = token;\n    }\n\n    /**\n     * Method to get token from localStorage\n     * return token: string\n     */\n    public getToken(): string {\n        if (!this.token) {\n            this.token = localStorage.getItem('simpley-ng-token');\n        }\n        return this.token;\n    }\n\n    /**\n     * Private method to facilitate making API calls. This will construct and return the proper HTTP request observable\n     * depending on the specific type of request.\n     * @param method\n     * @param type: 'login'|'register'|'todo'\n     * @param param: ':userid' | ':todoid'\n     * @param user\n     * @param body\n     */\n    public request(method: 'post' | 'get' | 'put' | 'delete', type: 'login' | 'signup' | 'today', param?: ':userid' | ':todoid', user?: TokenPayload, body?): Observable<any> {\n        let base;\n        const jsonMimeType = {\n            'Content-type': 'application/json'\n        };\n        const tokenAuth = {\n            'token': `${this.getToken()}`\n        };\n        const baseURL = 'http://simpley.ramarolahy.website';\n        if (type === 'login' || type === 'signup') {\n            // Depending one the request method, send token or set request headers accordingly\n            if (method === 'post') {\n                base = this.http.post(`${baseURL}/api/${type}`, user);\n            } else {\n                base = this.http.get(`${baseURL}/api/${type}`, {headers: {Authorization: `Bearer ${tokenAuth.token}`}});\n            }\n\n            // See https://blog.angularindepth.com/reading-the-rxjs-6-sources-map-and-pipe-94d51fec71c2 to read about pipe() and\n            // map()\n            // ** NOT to be confused with Angular 2.0 pipes https://angular.io/guide/pipes\n            return base.pipe(\n                map((res: TokenResponse) => {\n                    if (res.token) {\n                        this.saveToken(res.token);\n                    }\n                    return res;\n                })\n            );\n\n        } else {\n            switch (method) {\n                case \"post\":\n                    return this.http.post(`${baseURL}/api/${type}/${param}`, body, {headers: jsonMimeType}).pipe(\n                        map(res => res)\n                    );\n                case 'get':\n                    return this.http.get(`${baseURL}/api/${type}/${param}`).pipe(\n                        map(res => res)\n                    );\n                case \"put\":\n                    return this.http.put(`${baseURL}/api/${type}/${param}`, body, {headers: jsonMimeType}).pipe(\n                        map(res => res)\n                    );\n                case \"delete\":\n                    return this.http.delete(`${baseURL}/api/${type}/${param}`).pipe(\n                        map(res => res)\n                    );\n                default:\n                    break;\n            }\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthenticateService implements CanActivate {\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  canActivate() {\n    if (!this.auth.isLoggedIn()) {\n      this.router.navigateByUrl('/login');\n      return false;\n    }\n    return true;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Router} from '@angular/router';\n\nimport {ApiService, TokenPayload} from \"../api/api.service\";\n\n// Interfaces here\n// The interface is to handle the data types (useful for type checking the application.\nexport interface UserDetails {\n    _id: string;\n    email: string;\n    firstname: string;\n    exp: number;\n    iat: number;\n}\n\n\n// See https://angular.io/api/core/Injectable for Injectable decorator\n@Injectable()\nexport class AuthenticationService {\n    private token: string;\n\n    constructor(private api: ApiService, private http: HttpClient, private router: Router) {\n    }\n\n\n    /**\n     * Method to check\n     */\n    public getUserDetails(): UserDetails {\n        const token = this.api.getToken();\n        let payload;\n        if (token) {\n            payload = token.split('.')[1];\n            payload = window.atob(payload);\n            return JSON.parse(payload);\n        } else {\n            return null;\n        }\n    }\n\n    public isLoggedIn(): boolean {\n        const user = this.getUserDetails();\n        if (user) {\n            return user.exp > Date.now() / 1000;\n        } else {\n            return false;\n        }\n    }\n\n\n    /**\n     * Public method to register new user\n     * @param user\n     */\n    public signup(user: TokenPayload): Observable<any> {\n        return this.api.request('post', 'signup', null, user);\n    }\n\n    /**\n     * Public method to login user\n     * @param user\n     */\n    public login(user: TokenPayload): Observable<any> {\n        return this.api.request('post', 'login', null, user);\n    }\n\n    /**\n     * Method to logout user and remove token from localStorage\n     * return void\n     */\n    public logout(): void {\n        this.token = '';\n        window.localStorage.removeItem('simpley-ng-token');\n        this.router.navigateByUrl('/');\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Router} from '@angular/router';\n\nimport {ApiService} from \"../api/api.service\";\n\n\n\n\n@Injectable()\nexport class TodayService {\n\n    constructor(private api: ApiService, private http: HttpClient, private router: Router) {\n    }\n\n    /**\n     * Public method to CREATE new todo\n     * @param userid\n     * @param newTodo\n     */\n    public addTodo(userid, newTodo: object): Observable<any> {\n        const body = JSON.stringify(newTodo);\n        return this.api.request('post', 'today', userid, null, body)\n    }\n    /**\n     * Public method to READ user's today\n     */\n    public getTodos(userid): Observable<any> {\n        return this.api.request('get', 'today', userid);\n    }\n\n    /**\n     * Public method to UPDATE todo\n     * @param todoid\n     * @param body\n     */\n    public editTodo(todoid, body): Observable<any> {\n        return this.api.request('put', 'today', todoid, null, body)\n    }\n\n    public deleteTodo(todoid: ':todoid'): Observable<any> {\n        return this.api.request('delete', 'today', todoid)\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}